
<!-- ==============================================================
      SVG12-RNG | Viewport attributes
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         xmlns:svg='http://www.w3.org/2000/svg'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >

  <include href='../Tiny-1.2/tiny-viewport-attrib.rng'/>


  <define name='SVG.overflow.values' combine='choice'>
    <choice>
      <value>hidden</value>
      <value>scroll</value>
      <value>auto</value>
      <value>inherit</value>
    </choice>
  </define>

  <define name='ClipValue.datatype'>
    <data type='string'/>
  </define>

  <define name='SVG.clip.attrib'>
    <optional>
      <attribute name='clip'>
        <ref name='ClipValue.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.Viewport.attrib' combine='interleave'>
    <ref name='SVG.clip.attrib'/>
  </define>

</grammar>




<!-- ==============================================================
      SVG12-RNG | View
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >

  <define name='SVG.View.class' combine='choice'>
    <choice>
      <ref name='view'/>
    </choice>
  </define>




  <define name='SVG.view.content'>
    <zeroOrMore>
      <ref name='SVG.Description.class'/>
    </zeroOrMore>
  </define>

  <define name='view'>
    <element name='view'>
      <ref name='attlist.view'/>
      <ref name='SVG.view.content'/>
    </element>
  </define>

  <define name='attlist.view' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.External.attrib'/>
    <optional>
      <attribute name='viewBox'>
        <ref name='ViewBoxSpec.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='preserveAspectRatio' a:defaultValue='xMidYMid meet'>
        <ref name='PreserveAspectRatioSpec.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='zoomAndPan' a:defaultValue='magnify'>
        <choice>
          <value>disable</value>
          <value>magnify</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name='viewTarget'/>
    </optional>
  </define>

</grammar>


<!-- ==============================================================
      SVG12-RNG | Vector Effects attribute
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         xmlns:svg='http://www.w3.org/2000/svg'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >

  <include href='../Tiny-1.2/tiny-vectoreffects-attrib.rng'/>

  <define name='VectorEffectAttrib.datatype' combine='choice'>
    <choice>
      <value>inherit</value>
      <data type='string'/>
    </choice>
  </define>


</grammar>





<!-- ==============================================================
      SVG12-RNG | Vector Effects
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >


  <define name='SVG.VectorEffect.class' combine='choice'>
    <choice>
      <ref name='vectorEffect'/>
    </choice>
  </define>




  <define name='vectorEffect'>
    <element name='vectorEffect'>
      <ref name='attlist.vectorEffect'/>
      <ref name='SVG.vectorEffect.content'/>
    </element>
  </define>

  <define name='attlist.vectorEffect' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <optional>
      <attribute name='vectorEffectUnits' a:defaultValue='userSpaceOnUse'>
        <choice>
          <value>userSpaceOnUse</value>
          <value>objectBoundingBox</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name='clipout' a:defaultValue='normal'>
        <choice>
          <value>normal</value>
          <value>clip</value>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name='SVG.vectorEffect.content'>
    <zeroOrMore>
      <ref name='SVG.Description.class'/>
    </zeroOrMore>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
        <ref name='vePath'/>
        <ref name='veSetback'/>
        <ref name='veStrokePath'/>
        <ref name='veAffine'/>
        <ref name='veJoin'/>
        <ref name='veReverse'/>
        <ref name='veUnion'/>
        <ref name='veIntersect'/>
        <ref name='veExclude'/>
        <ref name='veFill'/>
        <ref name='veStroke'/>
        <ref name='veMarker'/>
      </choice>
    </zeroOrMore>
  </define>




  <define name='SVG.VECommon.attrib' combine='interleave'>
    <optional>
      <attribute name='in'>
        <data type='NMTOKEN'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='result'>
        <data type='NMTOKEN'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.VECommon-2.attrib' combine='interleave'>
    <ref name='SVG.VECommon.attrib'/>
    <optional>
      <attribute name='in2'>
        <data type='NMTOKEN'/>
      </attribute>
    </optional>
  </define>

  <define name='VEtransform.attrib' combine='interleave'>
    <optional>
      <attribute name='transform'/>
    </optional>
  </define>

  <define name='VEtransformPath.attrib' combine='interleave'>
    <optional>
      <attribute name='transformPath'/>
    </optional>
  </define>

  <define name='VEPrimitive.content'>
    <empty/>
  </define>






  <define name='veStrokePath'>
    <element name='veStrokePath'>
      <ref name='attlist.veStrokePath'/>
      <ref name='VEPrimitive.content'/>
    </element>
  </define>

  <define name='attlist.veStrokePath' combine='interleave'>
    <ref name='SVG.VECommon.attrib'/>
    <ref name='VEtransform.attrib'/>
    <ref name='SVG.stroke-dasharray.attrib'/>
    <ref name='SVG.stroke-dashoffset.attrib'/>
    <ref name='SVG.stroke-linecap.attrib'/>
    <ref name='SVG.stroke-linejoin.attrib'/>
    <ref name='SVG.stroke-miterlimit.attrib'/>
    <ref name='SVG.stroke-width.attrib'/>
  </define>




  <define name='veSetback'>
    <element name='veSetback'>
      <ref name='attlist.veSetback'/>
      <ref name='VEPrimitive.content'/>
    </element>
  </define>

  <define name='attlist.veSetback' combine='interleave'>
    <ref name='SVG.VECommon.attrib'/>
    <ref name='VEtransform.attrib'/>
    <optional>
      <attribute name='setback-offset'/>
    </optional>
  </define>



  <define name='veAffine'>
    <element name='veAffine'>
      <ref name='attlist.veAffine'/>
      <ref name='VEPrimitive.content'/>
    </element>
  </define>

  <define name='attlist.veAffine' combine='interleave'>
    <ref name='SVG.VECommon.attrib'/>
    <ref name='VEtransformPath.attrib'/>
  </define>



  <define name='veReverse'>
    <element name='veReverse'>
      <ref name='attlist.veReverse'/>
      <ref name='VEPrimitive.content'/>
    </element>
  </define>

  <define name='attlist.veReverse' combine='interleave'>
    <ref name='SVG.VECommon.attrib'/>
  </define>



  <define name='veJoin'>
    <element name='veJoin'>
      <ref name='attlist.veJoin'/>
      <ref name='VEPrimitive.content'/>
    </element>
  </define>

  <define name='attlist.veJoin' combine='interleave'>
    <ref name='SVG.VECommon-2.attrib'/>
    <optional>
      <attribute name='connect'>
        <choice>
          <value>none</value>
          <value>line</value>
        </choice>
      </attribute>
    </optional>
  </define>



  <define name='veUnion'>
    <element name='veUnion'>
      <ref name='attlist.veUnion'/>
      <ref name='VEPrimitive.content'/>
    </element>
  </define>

  <define name='attlist.veUnion' combine='interleave'>
    <ref name='SVG.VECommon-2.attrib'/>
  </define>





  <define name='veIntersect'>
    <element name='veIntersect'>
      <ref name='attlist.veIntersect'/>
      <ref name='VEPrimitive.content'/>
    </element>
  </define>

  <define name='attlist.veIntersect' combine='interleave'>
    <ref name='SVG.VECommon-2.attrib'/>
  </define>





  <define name='veExclude'>
    <element name='veExclude'>
      <ref name='attlist.veExclude'/>
      <ref name='VEPrimitive.content'/>
    </element>
  </define>

  <define name='attlist.veExclude' combine='interleave'>
    <ref name='SVG.VECommon-2.attrib'/>
  </define>




  <define name='veFill'>
    <element name='veFill'>
      <ref name='attlist.veFill'/>
      <ref name='VEPrimitive.content'/>
    </element>
  </define>

  <define name='attlist.veFill' combine='interleave'>
    <optional>
      <attribute name='in'>
        <data type='NMTOKEN'/>
      </attribute>
    </optional>
    <ref name='SVG.fill.attrib'/>
    <ref name='VEtransform.attrib'/>
  </define>




  <define name='veStroke'>
    <element name='veStroke'>
      <ref name='attlist.veStroke'/>
      <ref name='VEPrimitive.content'/>
    </element>
  </define>

  <define name='attlist.veStroke' combine='interleave'>
    <optional>
      <attribute name='in'>
        <data type='NMTOKEN'/>
      </attribute>
    </optional>
    <ref name='SVG.fill.attrib'/>
    <ref name='VEtransform.attrib'/>
  </define>




  <define name='veMarker'>
    <element name='veMarker'>
      <ref name='attlist.veMarker'/>
      <ref name='VEPrimitive.content'/>
    </element>
  </define>

  <define name='attlist.veMarker' combine='interleave'>
    <optional>
      <attribute name='in'>
        <data type='NMTOKEN'/>
      </attribute>
    </optional>
    <ref name='SVG.Marker.attrib'/>
  </define>




  <define name='vePath'>
    <element name='vePath'>
      <ref name='attlist.vePath'/>
      <ref name='SVG.vePath.content'/>
    </element>
  </define>

  <define name='attlist.vePath' combine='interleave'>
    <optional>
      <attribute name='result'>
        <data type='NMTOKEN'/>
      </attribute>
    </optional>

<!-- ==============================================================
      SVG12-RNG | XML Events
     ============================================================== -->

<grammar ns='http://www.w3.org/2001/xml-events'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >


  <define name='SVG.XMLEvents.class' combine='interleave'>
    <choice>
      <ref name='listener'/>
    </choice>
  </define>

  <define name='SVG.XMLEvents.attrib' combine='interleave'>
    <ref name='SVG.event.attrib'/>
    <ref name='SVG.phase.attrib'/>
    <ref name='SVG.propagate.attrib'/>
    <ref name='SVG.defaultAction.attrib'/>
    <ref name='SVG.observer.attrib'/>
    <ref name='SVG.target.attrib'/>
    <ref name='SVG.handler.attrib'/>
  </define>


  <define name='SVG.event.attrib'>
    <optional>
      <attribute name='event'>
        <choice>
          <data type='NMTOKEN'/>
          <data type='QName'/>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name='SVG.phase.attrib' a:defaultValue='default'>
    <optional>
      <attribute name='phase'>
        <choice>
          <value>default</value>
          <value>capture</value>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name='SVG.propagate.attrib' a:defaultValue='continue'>
    <optional>
      <attribute name='propagate'>
        <choice>
          <value>continue</value>
          <value>stop</value>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name='SVG.defaultAction.attrib'>
    <optional>
      <attribute name='defaultAction' a:defaultValue='perform'>
        <choice>
          <value>perform</value>
          <value>cancel</value>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name='SVG.observer.attrib'>
    <optional>
      <attribute name='observer'>
        <ref name='URI.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.target.attrib'>
    <optional>
      <attribute name='target'>
        <ref name='URI.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.handler.attrib'>
    <optional>
      <attribute name='handler'>
        <ref name='URI.datatype'/>
      </attribute>
    </optional>
  </define>







  <define name='listener'>
    <element name='listener'>
      <ref name='attlist.listener'/>
      <ref name='SVG.listener.content'/>
    </element>
  </define>

  <define name='attlist.listener' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.XMLEvents.attrib'/>
    <ref name='SVG.listener.content'/>
  </define>

  <define name='SVG.listener.content'>
    <empty/>
  </define>

</grammar>




<!-- ==============================================================
      SVG12-RNG | traitDef
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg' xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         xmlns:svg='http://www.w3.org/2000/svg'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'>

  <define name='SVG.TraitDef.class' combine='choice'>
    <choice>
      <ref name='traitDef'/>
    </choice>
  </define>

  <define name='traitDef'>
    <element name='traitDef'>
      <ref name='attlist.traitDef'/>
    </element>
  </define>

  <define name='attlist.traitDef' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <attribute name='name' svg:animatable='false' svg:inheritable='false'/>
    <attribute name='namespace' svg:animatable='false' svg:inheritable='false'>
      <ref name='URI.datatype'/>
    </attribute>
    <attribute name='valueType' svg:animatable='false' svg:inheritable='false'>
      <choice>
        <value>http://www.w3.org/2001/XMLSchema#string</value>
        <value>http://www.w3.org/2001/XMLSchema#float</value>
        <value>http://www.w3.org/2000/svg#SVGLength</value>
        <value>http://www.w3.org/2000/svg#SVGMatrix</value>
        <value>http://www.w3.org/2000/svg#SVGPath</value>
        <value>http://www.w3.org/2000/svg#SVGRect</value>
        <value>http://www.w3.org/2000/svg#SVGRGBColor</value>
      </choice>
    </attribute>
  </define>

</grammar>




  </define>

  <define name='SVG.vePath.content'>
    <oneOrMore>
      <ref name='vePathRef'/>
    </oneOrMore>
  </define>




  <define name='vePathRef'>
    <element name='vePathRef'>
      <ref name='attlist.vePathRef'/>
      <ref name='VEPrimitive.content'/>
    </element>
  </define>

  <define name='attlist.vePathRef' combine='interleave'>
    <ref name='SVG.XLinkRequired.attrib'/>
    <ref name='VEtransform.attrib'/>
    <optional>
      <attribute name='connect'/>
    </optional>
    <optional>
      <attribute name='reverse'/>
    </optional>
  </define>

</grammar>




<!-- ==============================================================
      SVG12-RNG | Tooltips attribute
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >

  <define name='SVG.tooltip.attrib'>
    <optional>
      <attribute name='tooltip' a:defaultValue='enable'>
        <choice>
          <value>enable</value>
          <value>disable</value>
          <value>inherit</value>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name='SVG.Tooltip.attrib' combine='interleave'>
    <ref name='SVG.tooltip.attrib'/>
  </define>

</grammar>





<!-- ==============================================================
      SVG12-RNG | Text
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >

  <include href='../Tiny-1.2/tiny-text.rng'/>


  <define name='BaselineShiftValue.datatype'              ><data type='string'/></define>
  <define name='FontSizeAdjustValue.datatype'             ><data type='string'/></define>
  <define name='GlyphOrientationHorizontalValue.datatype' ><data type='string'/></define>
  <define name='GlyphOrientationVerticalValue.datatype'   ><data type='string'/></define>
  <define name='KerningValue.datatype'                    ><data type='string'/></define>
  <define name='SpacingValue.datatype'                    ><data type='string'/></define>
  <define name='TextDecorationValue.datatype'             ><data type='string'/></define>


  <define name='SVG.Text.attrib' combine='interleave'>
    <optional>
      <attribute name='writing-mode'>
        <choice>
          <value>lr-tb</value>
          <value>rl-tb</value>
          <value>tb-rl</value>
          <value>lr</value>
          <value>rl</value>
          <value>tb</value>
          <value>inherit</value>
        </choice>
      </attribute>
    </optional>
  </define>




  <define name='SVG.TextContent.attrib' combine='interleave'>
    <optional>
      <attribute name='alignment-baseline'>
        <choice>
          <value>auto</value>
          <value>baseline</value>
          <value>before-edge</value>
          <value>text-before-edge</value>
          <value>middle</value>
          <value>central</value>
          <value>after-edge</value>
          <value>text-after-edge</value>
          <value>ideographic</value>
          <value>alphabetic</value>
          <value>hanging</value>
          <value>mathematical</value>
          <value>inherit</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name='baseline-shift'>
        <ref name='BaselineShiftValue.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='direction'>
        <choice>
          <value>ltr</value>
          <value>rtl</value>
          <value>inherit</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name='dominant-baseline'>
        <choice>
          <value>auto</value>
          <value>use-script</value>
          <value>no-change</value>
          <value>reset-size</value>
          <value>ideographic</value>
          <value>alphabetic</value>
          <value>hanging</value>
          <value>mathematical</value>
          <value>central</value>
          <value>middle</value>
          <value>text-after-edge</value>
          <value>text-before-edge</value>
          <value>inherit</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name='glyph-orientation-horizontal'>
        <ref name='GlyphOrientationHorizontalValue.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='glyph-orientation-vertical'>
        <ref name='GlyphOrientationVerticalValue.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='kerning'>
        <ref name='KerningValue.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='letter-spacing'>
        <ref name='SpacingValue.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='text-decoration'>
        <ref name='TextDecorationValue.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='unicode-bidi'>
        <choice>
          <value>normal</value>
          <value>embed</value>
          <value>bidi-override</value>
          <value>inherit</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name='word-spacing'>
        <ref name='SpacingValue.datatype'/>
      </attribute>
    </optional>
  </define>




  <define name='SVG.Font.attrib' combine='interleave'>
    <optional>
      <attribute name='font-size-adjust'>
        <ref name='FontSizeAdjustValue.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='font-stretch'>
        <choice>
          <value>normal</value>
          <value>wider</value>
          <value>narrower</value>
          <value>ultra-condensed</value>
          <value>extra-condensed</value>
          <value>condensed</value>
          <value>semi-condensed</value>
          <value>semi-expanded</value>
          <value>expanded</value>
          <value>extra-expanded</value>
          <value>ultra-expanded</value>
          <value>inherit</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name='font-variant'>
        <choice>
          <value>normal</value>
          <value>small-caps</value>
          <value>inherit</value>
        </choice>
      </attribute>
    </optional>
  </define>



  <define name='SVG.Text.class' combine='choice'>
    <choice>
      <ref name='altGlyphDef'/>
    </choice>
  </define>

  <define name='SVG.TextContent.class' combine='choice'>
    <choice>
      <ref name='tref'/>
      <ref name='textPath'/>
    </choice>
  </define>


  <define name='attlist.text' combine='interleave'>
    <ref name='SVG.Text.attrib'/>
    <ref name='SVG.TextContent.attrib'/>
    <optional>
      <attribute name='dx'>
        <ref name='Lengths.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='dy'>
        <ref name='Lengths.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='textLength'>
        <ref name='Length.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='lengthAdjust'>
        <choice>
          <value>spacing</value>
          <value>spacingAndGlyphs</value>
        </choice>
      </attribute>
    </optional>
  </define>





  <define name='SVG.tspan.content' combine='interleave'>
    <zeroOrMore>
      <choice>
        <ref name='tref'/>
        <ref name='altGlyph'/>
      </choice>
    </zeroOrMore>
  </define>


  <define name='attlist.tspan' combine='interleave'>
    <optional>
      <attribute name='x'>
        <ref name='Coordinates.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='y'>
        <ref name='Coordinates.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='dx'>
        <ref name='Lengths.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='dy'>
        <ref name='Lengths.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='rotate'>
        <ref name='Numbers.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='textLength'>
        <ref name='Length.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='lengthAdjust'>
        <choice>
          <value>spacing</value>
          <value>spacingAndGlyphs</value>
        </choice>
      </attribute>
    </optional>
  </define>





  <define name='SVG.tref.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
        <ref name='animateColor'/>
        <ref name='SVG.Description.class'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='tref'>
    <element name='tref'>
      <ref name='attlist.tref'/>
      <ref name='SVG.tref.content'/>
    </element>
  </define>

  <define name='attlist.tref' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.Conditional.attrib'/>
    <ref name='SVG.Style.attrib'/>
    <ref name='SVG.TextContent.attrib'/>
    <ref name='SVG.Font.attrib'/>
    <ref name='SVG.Paint.attrib'/>
    <ref name='SVG.Color.attrib'/>
    <ref name='SVG.Opacity.attrib'/>
    <ref name='SVG.Graphics.attrib'/>
    <ref name='SVG.Clip.attrib'/>
    <ref name='SVG.Mask.attrib'/>
    <ref name='SVG.Filter.attrib'/>
    <ref name='SVG.GraphicalEvents.attrib'/>
    <ref name='SVG.Cursor.attrib'/>
    <ref name='SVG.XLinkRequired.attrib'/>
    <ref name='SVG.External.attrib'/>
    <optional>
      <attribute name='x'>
        <ref name='Coordinates.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='y'>
        <ref name='Coordinates.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='dx'>
        <ref name='Lengths.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='dy'>
        <ref name='Lengths.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='rotate'>
        <ref name='Numbers.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='textLength'>
        <ref name='Length.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='lengthAdjust'>
        <choice>
          <value>spacing</value>
          <value>spacingAndGlyphs</value>
        </choice>
      </attribute>
    </optional>
  </define>





  <define name='SVG.textPath.content'>
    <zeroOrMore>
      <choice>
        <text/>
        <ref name='tspan'/>
        <ref name='tref'/>
        <ref name='altGlyph'/>
        <ref name='animate'/>
        <ref name='set'/>
        <ref name='animateColor'/>
        <ref name='SVG.Description.class'/>
        <ref name='SVG.Hyperlink.class'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='textPath'>
    <element name='textPath'>
      <ref name='attlist.textPath'/>
      <ref name='SVG.textPath.content'/>
    </element>
  </define>

  <define name='attlist.textPath' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.Conditional.attrib'/>
    <ref name='SVG.Style.attrib'/>
    <ref name='SVG.TextContent.attrib'/>
    <ref name='SVG.Font.attrib'/>
    <ref name='SVG.Paint.attrib'/>
    <ref name='SVG.Color.attrib'/>
    <ref name='SVG.Opacity.attrib'/>
    <ref name='SVG.Graphics.attrib'/>
    <ref name='SVG.Clip.attrib'/>
    <ref name='SVG.Mask.attrib'/>
    <ref name='SVG.Filter.attrib'/>
    <ref name='SVG.GraphicalEvents.attrib'/>
    <ref name='SVG.Cursor.attrib'/>
    <ref name='SVG.XLinkRequired.attrib'/>
    <ref name='SVG.External.attrib'/>
    <optional>
      <attribute name='startOffset'>
        <ref name='Length.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='textLength'>
        <ref name='Length.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='lengthAdjust'>
        <choice>
          <value>spacing</value>
          <value>spacingAndGlyphs</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name='method'>
        <choice>
          <value>align</value>
          <value>stretch</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name='spacing'>
        <choice>
          <value>auto</value>
          <value>exact</value>
        </choice>
      </attribute>
    </optional>
  </define>




  <define name='attlist.altGlyph' combine='interleave'>
    <ref name='attlist.tspan'/>
    <ref name='SVG.XLink.attrib'/>
    <optional>
      <attribute name='glyphRef'>
        <data type='string'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='format'>
        <data type='string'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.altGlyph.content' combine='choice'>
    <text/>
  </define>

  <define name='altGlyph'>
    <element name='altGlyph'>
      <ref name='attlist.altGlyph'/>
      <ref name='SVG.altGlyph.content'/>
    </element>
  </define>





  <define name='attlist.altGlyphDef' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
  </define>

  <define name='SVG.altGlyphDef.content' combine='choice'>
    <choice>
      <oneOrMore>
        <ref name='altGlyphItem'/>
      </oneOrMore>
      <oneOrMore>
        <ref name='glyphRef'/>
      </oneOrMore>
    </choice>
  </define>

  <define name='altGlyphDef'>
    <element name='altGlyphDef'>
      <ref name='attlist.altGlyphDef'/>
      <ref name='SVG.altGlyphDef.content'/>
    </element>
  </define>






  <define name='SVG.altGlyphItem.content'>
    <oneOrMore>
      <ref name='glyphRef'/>
    </oneOrMore>
  </define>

  <define name='altGlyphItem'>
    <element name='altGlyphItem'>
      <ref name='attlist.altGlyphItem'/>
      <ref name='SVG.altGlyphItem.content'/>
    </element>
  </define>

  <define name='attlist.altGlyphItem' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
  </define>



  <!--
    altGlyph
    altGlyphDef
    altGlyphItem
    glyphRef
    -->




  <define name='SVG.glyphRef.content'>
    <oneOrMore>
      <ref name='glyphRef'/>
    </oneOrMore>
  </define>

  <define name='glyphRef'>
    <element name='glyphRef'>
      <ref name='attlist.glyphRef'/>
    </element>
  </define>

  <define name='attlist.glyphRef' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.Style.attrib'/>
    <ref name='SVG.Font.attrib'/>
    <ref name='SVG.XLink.attrib'/>
    <optional>
      <attribute name='x'>
        <ref name='Coordinates.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='y'>
        <ref name='Coordinates.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='dx'>
        <ref name='Lengths.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='dy'>
        <ref name='Lengths.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='glyphRef'>
        <data type='string'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='format'>
        <data type='string'/>
      </attribute>
    </optional>
  </define>

</grammar>





<!-- ==============================================================
      SVG12-RNG | Style
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >

  <define name='ClassList.datatype'>
    <data type='NMTOKENS'/>
  </define>

  <define name='StyleSheet.datatype'>
    <data type='string'/>
  </define>

  <define name='MediaDesc.datatype'>
    <data type='string'/>
  </define>





  <define name='SVG.Style.attrib' combine='interleave'>
    <optional>
      <attribute name='style'>
        <ref name='StyleSheet.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='class'>
        <ref name='ClassList.datatype'/>
      </attribute>
    </optional>
  </define>





  <define name='SVG.Style.class' combine='choice'>
    <choice>
      <ref name='style'/>
    </choice>
  </define>




  <define name='style'>
    <element name='style'>
      <ref name='attlist.style'/>
      <ref name='SVG.style.content'/>
    </element>
  </define>

  <define name='attlist.style' combine='interleave'>
    <ref name='SVG.CorePreserve.attrib'/>
    <ref name='SVG.External.attrib'/>
    <attribute name='type'>
      <ref name='ContentType.datatype'/>
    </attribute>
    <optional>
      <attribute name='media'>
        <ref name='MediaDesc.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='title'>
        <ref name='Text.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.style.content'>
    <choice>
      <ref name='SVG.XLinkRequired.attrib'/>
      <text/>
    </choice>
  </define>

</grammar>




<!-- ==============================================================
      SVG12-RNG | Structure
     ============================================================== -->
<grammar ns="http://www.w3.org/2000/svg" xml:lang="en" xmlns="http://relaxng.org/ns/structure/1.0" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <include href="../Tiny-1.2/tiny-structure.rng"/>
  <define name="SVG.Structure.class" combine="choice">
    <choice>
      <ref name="symbol"/>
    </choice>
  </define>
  <define name="SVG.Description.class" combine="choice">
    <ref name="hint"/>
  </define>
  <define name="hint">
    <element name="hint">
      <ref name="attlist.hint"/>
      <ref name="SVG.hint.content"/>
    </element>
  </define>
  <define name="attlist.hint" combine="interleave">
    <ref name="SVG.Core.attrib"/>
  </define>
  <define name="SVG.hint.content">
    <choice>
      <ref name="SVG.XLinkEmbed.attrib"/>
      <text/>
    </choice>
  </define>
  <define name="SVG.symbol.content">
    <zeroOrMore>
      <choice>
        <ref name="SVG.Description.class"/>
        <ref name="SVG.Animation.class"/>
        <ref name="SVG.Structure.class"/>
        <ref name="SVG.Conditional.class"/>
        <ref name="SVG.Image.class"/>
        <ref name="SVG.MultiImage.class"/>
        <ref name="SVG.Style.class"/>
        <ref name="SVG.Shape.class"/>
        <ref name="SVG.Text.class"/>
        <ref name="SVG.Marker.class"/>
        <ref name="SVG.Profile.class"/>
        <ref name="SVG.Gradient.class"/>
        <ref name="SVG.Pattern.class"/>
        <ref name="SVG.Clip.class"/>
        <ref name="SVG.Mask.class"/>
        <ref name="SVG.Filter.class"/>
        <ref name="SVG.Cursor.class"/>
        <ref name="SVG.Hyperlink.class"/>
        <ref name="SVG.View.class"/>
        <ref name="SVG.Script.class"/>
        <ref name="SVG.Font.class"/>
      </choice>
    </zeroOrMore>
  </define>
  <define name="symbol">
    <element name="symbol">
      <ref name="attlist.symbol"/>
      <ref name="SVG.symbol.content"/>
    </element>
  </define>
  <define name="attlist.symbol" combine="interleave">
    <ref name="SVG.Core.attrib"/>
    <ref name="SVG.Style.attrib"/>
    <ref name="SVG.Presentation.attrib"/>
    <ref name="SVG.GraphicalEvents.attrib"/>
    <ref name="SVG.External.attrib"/>
    <ref name="SVG.ShadowInherit.attrib"/>
    <optional>
      <attribute name="viewBox">
        <ref name="ViewBoxSpec.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="preserveAspectRatio" a:defaultValue="xMidYMid meet">
        <ref name="PreserveAspectRatioSpec.datatype"/>
      </attribute>
    </optional>
  </define>
</grammar>




<!-- ==============================================================
      SVG12-RNG | Shadow Inherit attribute
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >

  <define name='SVG.shadowInherit.attrib'>
    <optional>
      <attribute name='shadowInherit' a:defaultValue='onDefine'>
        <choice>
          <value>onDefine</value>
          <value>onUse</value>
          <value>dynamic</value>
          <value>none</value>
          <value>inherit</value>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name='SVG.ShadowInherit.attrib' combine='interleave'>
    <ref name='SVG.shadowInherit.attrib'/>
  </define>

</grammar>




<!-- ==============================================================
      SVG12-RNG | Color Profile
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >

  <define name='SVG.Profile.attrib' combine='interleave'>
    <optional>
      <attribute name='color-profile'/>
    </optional>
  </define>




  <define name='SVG.Profile.class' combine='choice'>
    <choice>
      <ref name='color-profile'/>
    </choice>
  </define>



  <define name='SVG.color-profile.content'>
    <zeroOrMore>
      <ref name='SVG.Description.class'/>
    </zeroOrMore>
  </define>

  <define name='color-profile'>
    <element name='color-profile'>
      <ref name='attlist.color-profile'/>
      <ref name='SVG.color-profile.content'/>
    </element>
  </define>

  <define name='attlist.color-profile' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.XLink.attrib'/>
    <optional>
      <attribute name='local'/>
    </optional>
    <attribute name='name'/>
    <optional>
      <attribute name='rendering-intent' a:defaultValue='auto'>
        <choice>
          <value>auto</value>
          <value>perceptual</value>
          <value>relative-colorimetric</value>
          <value>saturation</value>
          <value>absolute-colorimetric</value>
        </choice>
      </attribute>
    </optional>
  </define>

</grammar>




<!-- ==============================================================
      SVG12-RNG | Patterns
     ============================================================== -->
<grammar ns="http://www.w3.org/2000/svg" xml:lang="en" xmlns="http://relaxng.org/ns/structure/1.0" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <define name="SVG.Pattern.class" combine="choice">
    <choice>
      <ref name="pattern"/>
    </choice>
  </define>
  <define name="SVG.pattern.content">
    <zeroOrMore>
      <choice>
        <ref name="SVG.Description.class"/>
        <ref name="SVG.Animation.class"/>
        <ref name="SVG.Structure.class"/>
        <ref name="SVG.Conditional.class"/>
        <ref name="SVG.Image.class"/>
        <ref name="SVG.MultiImage.class"/>
        <ref name="SVG.Style.class"/>
        <ref name="SVG.Shape.class"/>
        <ref name="SVG.Text.class"/>
        <ref name="SVG.Marker.class"/>
        <ref name="SVG.Profile.class"/>
        <ref name="SVG.Gradient.class"/>
        <ref name="SVG.Pattern.class"/>
        <ref name="SVG.Clip.class"/>
        <ref name="SVG.Mask.class"/>
        <ref name="SVG.Filter.class"/>
        <ref name="SVG.Cursor.class"/>
        <ref name="SVG.Hyperlink.class"/>
        <ref name="SVG.View.class"/>
        <ref name="SVG.Script.class"/>
        <ref name="SVG.Font.class"/>
      </choice>
    </zeroOrMore>
  </define>
  <define name="pattern">
    <element name="pattern">
      <ref name="attlist.pattern"/>
      <ref name="SVG.pattern.content"/>
    </element>
  </define>
  <define name="attlist.pattern" combine="interleave">
    <ref name="SVG.Core.attrib"/>
    <ref name="SVG.Conditional.attrib"/>
    <ref name="SVG.Style.attrib"/>
    <ref name="SVG.Presentation.attrib"/>
    <ref name="SVG.XLink.attrib"/>
    <ref name="SVG.External.attrib"/>
    <optional>
      <attribute name="x">
        <ref name="Coordinate.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="y">
        <ref name="Coordinate.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="width">
        <ref name="Length.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="height">
        <ref name="Length.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="patternUnits">
        <choice>
          <value>userSpaceOnUse</value>
          <value>objectBoundingBox</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="patternContentUnits">
        <choice>
          <value>userSpaceOnUse</value>
          <value>objectBoundingBox</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="patternTransform">
        <ref name="TransformList.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="viewBox">
        <ref name="ViewBoxSpec.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="preserveAspectRatio" a:defaultValue="xMidYMid meet">
        <ref name="PreserveAspectRatioSpec.datatype"/>
      </attribute>
    </optional>
  </define>
</grammar>




<!-- ==============================================================
      SVG12-RNG | Opacity attributes
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         xmlns:svg='http://www.w3.org/2000/svg'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >

  <include href='../Tiny-1.2/tiny-opacity-attrib.rng'/>

  <define name='SVG.opacity.attrib'>
    <optional>
      <attribute name='opacity'>
        <ref name='OpacityValue.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.Opacity.attrib' combine='interleave'>
    <ref name='SVG.opacity.attrib'/>
  </define>

</grammar>



<!-- ==============================================================
      SVG12-RNG | multiImages
     ============================================================== -->
<grammar ns="http://www.w3.org/2000/svg" xml:lang="en" xmlns="http://relaxng.org/ns/structure/1.0" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns:svg="http://www.w3.org/2000/svg" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <define name="SVG.MultiImage.class" combine="choice">
    <choice>
      <ref name="multiImage"/>
    </choice>
  </define>
  <define name="SVG.multiImage.content">
    <zeroOrMore>
      <ref name="SVG.Description.class"/>
    </zeroOrMore>
    <zeroOrMore>
      <choice>
        <ref name="SVG.Animation.class"/>
        <ref name="SVG.Handler.class"/>
      </choice>
    </zeroOrMore>
    <!-- well its pointless without at least one, so lets be strict here -->
    <oneOrMore>
      <choice>
        <ref name="SVG.subImageRef.class"/>
        <ref name="SVG.subImage.class"/>
      </choice>
    </oneOrMore>
  </define>
  <define name="multiImage">
    <element name="multiImage">
      <ref name="attlist.multiImage"/>
      <ref name="SVG.multiImage.content"/>
    </element>
  </define>
  <define name="attlist.multiImage" combine="interleave">
    <ref name="SVG.Core.attrib"/>
    <ref name="SVG.Conditional.attrib"/>
    <ref name="SVG.Style.attrib"/>
    <ref name="SVG.Viewport.attrib"/>
    <ref name="SVG.Color.attrib"/>
    <ref name="SVG.Opacity.attrib"/>
    <ref name="SVG.Graphics.attrib"/>
    <ref name="SVG.Focusable.attrib"/>
    <ref name="SVG.Profile.attrib"/>
    <ref name="SVG.Clip.attrib"/>
    <ref name="SVG.Mask.attrib"/>
    <ref name="SVG.Compositing.attrib"/>
    <ref name="SVG.Filter.attrib"/>
    <ref name="SVG.Tooltip.attrib"/>
    <ref name="SVG.GraphicalEvents.attrib"/>
    <ref name="SVG.Cursor.attrib"/>
    <!-- compared with image, does not have its own links - only children have links
    <ref name="SVG.XLinkEmbed.attrib"/>
    -->
    <ref name="SVG.External.attrib"/>
    <ref name="SVG.Transition.attrib"/>
    <ref name="SVG.BackgroundFill.attrib"/>
    <ref name="SVG.ShadowInherit.attrib"/>
    <optional>
      <attribute name="begin" svg:animatable="true" svg:inheritable="false"/>
    </optional>
    <optional>
      <attribute name="end" svg:animatable="true" svg:inheritable="false"/>
    </optional>
    <optional>
      <attribute name="x" svg:animatable="true" svg:inheritable="false">
        <ref name="Coordinate.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="y" svg:animatable="true" svg:inheritable="false">
        <ref name="Coordinate.datatype"/>
      </attribute>
    </optional>
    <attribute name="width" svg:animatable="true" svg:inheritable="false">
      <ref name="Length.datatype"/>
    </attribute>
    <attribute name="height" svg:animatable="true" svg:inheritable="false">
      <ref name="Length.datatype"/>
    </attribute>
    <!-- no ref so no content type
    <optional>
      <attribute name="type" svg:animatable="false" svg:inheritable="false">
        <ref name="ContentType.datatype"/>
      </attribute>
    </optional>
    -->
    <optional>
      <attribute name="preserveAspectRatio" a:defaultValue="xMidYMid meet" svg:animatable="false" svg:inheritable="false">
        <ref name="PreserveAspectRatioSpec.datatype"/>
      </attribute>
    </optional>
    <ref name="SVG.transform.attrib"/>
  </define>
  <!--
    subImageRef
-->
  <define name="SVG.subImageRef.class" combine="choice">
    <choice>
      <ref name="subImageRef"/>
    </choice>
  </define>
  <define name="SVG.subImageRef.content">
    <zeroOrMore>
      <ref name="SVG.Description.class"/>
    </zeroOrMore>
    <zeroOrMore>
      <choice>
        <ref name="SVG.Animation.class"/>
        <ref name="SVG.Handler.class"/>
      </choice>
    </zeroOrMore>
  </define>
  <define name="subImageRef">
    <element name="subImageRef">
      <ref name="attlist.subImageRef"/>
      <ref name="SVG.subImageRef.content"/>
    </element>
  </define>
  <define name="attlist.subImageRef" combine="interleave">
    <ref name="SVG.Core.attrib"/>
    <ref name="SVG.Conditional.attrib"/>
    <ref name="SVG.Style.attrib"/>
    <!--  subImageRef does not establish a viewport
    <ref name="SVG.Viewport.attrib"/>
    -->
    <ref name="SVG.Color.attrib"/>
    <ref name="SVG.Opacity.attrib"/>
    <ref name="SVG.Graphics.attrib"/>
    <ref name="SVG.Focusable.attrib"/>
    <ref name="SVG.Profile.attrib"/>
    <ref name="SVG.Clip.attrib"/>
    <ref name="SVG.Mask.attrib"/>
    <ref name="SVG.Compositing.attrib"/>
    <ref name="SVG.Filter.attrib"/>
    <ref name="SVG.Tooltip.attrib"/>
    <ref name="SVG.GraphicalEvents.attrib"/>
    <ref name="SVG.Cursor.attrib"/>
    <ref name="SVG.XLinkEmbed.attrib"/>
    <ref name="SVG.External.attrib"/>
    <ref name="SVG.Transition.attrib"/>
    <ref name="SVG.BackgroundFill.attrib"/>
    <ref name="SVG.ShadowInherit.attrib"/>
    <!-- added the two attributes that control which subImageRef is used -->
    <optional>
      <attribute name="min-pixel-size" svg:animatable="true" svg:inheritable="false">
        <ref name="Numbers.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="max-pixel-size" svg:animatable="true" svg:inheritable="false">
        <ref name="Numbers.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="begin" svg:animatable="true" svg:inheritable="false"/>
    </optional>
    <optional>
      <attribute name="end" svg:animatable="true" svg:inheritable="false"/>
    </optional>
    <optional>
      <attribute name="type" svg:animatable="false" svg:inheritable="false">
        <ref name="ContentType.datatype"/>
      </attribute>
    </optional>
    <!-- removed x y width height -->
    <!-- no transform
    <ref name="SVG.transform.attrib"/>
    -->
  </define>
  <!--
  subImage
  -->
  <define name="SVG.subImage.class" combine="choice">
    <choice>
      <ref name="subImage"/>
    </choice>
  </define>
  <define name="subImage">
    <!-- subImage is basically a group but with min- and max-pixel-size-->
    <element name="subImage">
      <ref name="SVG.g.content"/>
      <ref name="attlist.g"/>
      <!-- added the two attributes that control which subImage is used -->
      <optional>
        <attribute name="min-pixel-size" svg:animatable="true" svg:inheritable="false">
          <ref name="Numbers.datatype"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="max-pixel-size" svg:animatable="true" svg:inheritable="false">
          <ref name="Numbers.datatype"/>
        </attribute>
      </optional>
    </element>
  </define>
  <!-- should probably do min-pixel-size and max-pixel-size here instead -->
  <!--
  <define name="SVG.minmaxpix.class">
   stuff
  </define>
  -->
</grammar>




<!-- ==============================================================
      SVG12-RNG | Transitions
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >


  <define name='SVG.Transition.class' combine='interleave'>
    <choice>
      <ref name='transition'/>
    </choice>
  </define>


  <define name='SVG.Transition.attrib' combine='interleave'>
    <ref name='transIn.attrib'/>
    <ref name='transOut.attrib'/>
  </define>

  <define name='transIn.attrib'>
    <optional>
      <attribute name='transIn'/>
    </optional>
  </define>

  <define name='transOut.attrib'>
    <optional>
      <attribute name='transOut'/>
    </optional>
  </define>



  <define name='transition'>
    <element name='transition'>
      <ref name='attlist.transition'/>
      <ref name='SVG.transition.content'/>
    </element>
  </define>

  <define name='attlist.transition' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <optional>
      <attribute name='dur'/>
    </optional>
    <optional>
      <attribute name='startProgress'>
        <data type='float'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='endProgress'>
        <data type='float'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='direction' a:defaultValue='forward'>
        <choice>
          <value>forward</value>
          <value>reverse</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name='fadeColor' a:defaultValue='black'/>
    </optional>
    <ref name='attlist.transition-types'/>
  </define>

  <define name='SVG.transition.content'>
    <zeroOrMore>
      <ref name='SVG.Description.class'/>
    </zeroOrMore>
  </define>


  <!-- the following correctly constrains all SMIL type/subtype cooccurences -->
  <define name='attlist.transition-types'>
    <choice>
      <group>
        <attribute name='type'><value>barWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='leftToRight'>
            <choice>
              <value>leftToRight</value>
              <value>topToBottom</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>boxWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='topLeft'>
            <choice>
              <value>topLeft</value>
              <value>topRight</value>
              <value>bottomRight</value>
              <value>bottomLeft</value>
              <value>topCenter</value>
              <value>rightCenter</value>
              <value>bottomCenter</value>
              <value>leftCenter</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>fourBoxWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='cornersIn'>
            <choice>
              <value>cornersIn</value>
              <value>cornersOut</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>barnDoorWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='vertical'>
            <choice>
              <value>vertical</value>
              <value>horizontal</value>
              <value>diagonalBottomLeft</value>
              <value>diagonalTopLeft</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>diagonalWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='topLeft'>
            <choice>
              <value>topLeft</value>
              <value>topRight</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>bowTieWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='vertical'>
            <choice>
              <value>vertical</value>
              <value>horizontal</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>miscDiagonalWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='doubleBarnDoor'>
            <choice>
              <value>doubleBarnDoor</value>
              <value>doubleDiamond</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>veeWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='down'>
            <choice>
              <value>down</value>
              <value>left</value>
              <value>up</value>
              <value>right</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>barnVeeWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='down'>
            <choice>
              <value>down</value>
              <value>left</value>
              <value>up</value>
              <value>right</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>zigZagWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='leftToRight'>
            <choice>
              <value>leftToRight</value>
              <value>topToBottom</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>barnZigZagWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='vertical'>
            <choice>
              <value>vertical</value>
              <value>horizontal</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>irisWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='rectangle'>
            <choice>
              <value>rectangle</value>
              <value>diamond</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>triangleWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='up'>
            <choice>
              <value>up</value>
              <value>right</value>
              <value>down</value>
              <value>left</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>arrowHeadWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='up'>
            <choice>
              <value>up</value>
              <value>right</value>
              <value>down</value>
              <value>left</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>pentagonWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='up'>
            <choice>
              <value>up</value>
              <value>down</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>hexagonWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='horizontal'>
            <choice>
              <value>horizontal</value>
              <value>vertical</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>ellipseWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='circle'>
            <choice>
              <value>circle</value>
              <value>horizontal</value>
              <value>vertical</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>eyeWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='horizontal'>
            <choice>
              <value>horizontal</value>
              <value>vertical</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>roundRectWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='horizontal'>
            <choice>
              <value>horizontal</value>
              <value>vertical</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>starWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='fourPoint'>
            <choice>
              <value>fourPoint</value>
              <value>fivePoint</value>
              <value>sixPoint</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>miscShapeWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='heart'>
            <choice>
              <value>heart</value>
              <value>keyhole</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>clockWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='clockwiseTwelve'>
            <choice>
              <value>clockwiseTwelve</value>
              <value>clockwiseThree</value>
              <value>clockwiseSix</value>
              <value>clockwiseNine</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>pinWheelWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='twoBladeVertical'>
            <choice>
              <value>twoBladeVertical</value>
              <value>twoBladeHorizontal</value>
              <value>fourBlade</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>singleSweepWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='clockwiseTop'>
            <choice>
              <value>clockwiseTop</value>
              <value>clockwiseRight</value>
              <value>clockwiseBottom</value>
              <value>clockwiseLeft</value>
              <value>clockwiseTopLeft</value>
              <value>counterClockwiseBottomLeft</value>
              <value>clockwiseBottomRight</value>
              <value>counterClockwiseTopRight</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>fanWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='centerTop'>
            <choice>
              <value>centerTop</value>
              <value>centerRight</value>
              <value>top</value>
              <value>right</value>
              <value>bottom</value>
              <value>left</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>doubleFanWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='fanOutVertical'>
            <choice>
              <value>fanOutVertical</value>
              <value>fanOutHorizontal</value>
              <value>fanInVertical</value>
              <value>fanInHorizontal</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>doubleSweepWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='parallelVertical'>
            <choice>
              <value>parallelVertical</value>
              <value>parallelDiagonal</value>
              <value>oppositeVertical</value>
              <value>oppositeHorizontal</value>
              <value>parallelDiagonalTopLeft</value>
              <value>parallelDiagonalBottomLeft</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>saloonDoorWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='top'>
            <choice>
              <value>top</value>
              <value>left</value>
              <value>bottom</value>
              <value>right</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>windshieldWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='right'>
            <choice>
              <value>right</value>
              <value>up</value>
              <value>vertical</value>
              <value>horizontal</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>snakeWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='topLeftHorizontal'>
            <choice>
              <value>topLeftHorizontal</value>
              <value>topLeftVertical</value>
              <value>topLeftDiagonal</value>
              <value>topRightDiagonal</value>
              <value>bottomRightDiagonal</value>
              <value>bottomLeftDiagonal</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>spiralWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='topLeftClockwise'>
            <choice>
              <value>topLeftClockwise</value>
              <value>topRightClockwise</value>
              <value>bottomRightClockwise</value>
              <value>bottomLeftClockwise</value>
              <value>topLeftCounterClockwise</value>
              <value>topRightCounterClockwise</value>
              <value>bottomRightCounterClockwise</value>
              <value>bottomLeftCounterClockwise</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>parallelSnakesWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='verticalTopSame'>
            <choice>
              <value>verticalTopSame</value>
              <value>verticalBottomSame</value>
              <value>verticalTopLeftOpposite</value>
              <value>verticalBottomLeftOpposite</value>
              <value>horizontalLeftSame</value>
              <value>horizontalRightSame</value>
              <value>horizontalTopLeftOpposite</value>
              <value>horizontalTopRightOpposite</value>
              <value>diagonalBottomLeftOpposite</value>
              <value>diagonalTopLeftOpposite</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>boxSnakesWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='twoBoxTop'>
            <choice>
              <value>twoBoxTop</value>
              <value>twoBoxBottom</value>
              <value>twoBoxLeft</value>
              <value>twoBoxRight</value>
              <value>fourBoxVertical</value>
              <value>fourBoxHorizontal</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>waterfallWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='verticalLeft'>
            <choice>
              <value>verticalLeft</value>
              <value>verticalRight</value>
              <value>horizontalLeft</value>
              <value>horizontalRight</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>pushWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='fromLeft'>
            <choice>
              <value>fromLeft</value>
              <value>fromTop</value>
              <value>fromRight</value>
              <value>fromBottom</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>slideWipe</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='fromLeft'>
            <choice>
              <value>fromLeft</value>
              <value>fromTop</value>
              <value>fromRight</value>
              <value>fromBottom</value>
            </choice>
          </attribute>
        </optional>
      </group>

      <group>
        <attribute name='type'><value>fade</value></attribute>
        <optional>
          <attribute name='subtype' a:defaultValue='crossfade'>
            <choice>
              <value>crossfade</value>
              <value>fadeToColor</value>
              <value>fadeFromColor</value>
            </choice>
          </attribute>
        </optional>
      </group>
    </choice>
  </define>

</grammar>





<!-- ==============================================================
      SVG12-RNG | Markers
     ============================================================== -->
<grammar ns="http://www.w3.org/2000/svg" xml:lang="en" xmlns="http://relaxng.org/ns/structure/1.0" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <define name="MarkerValue.datatype">
    <data type="string"/>
  </define>
  <define name="SVG.Marker.attrib" combine="interleave">
    <optional>
      <attribute name="marker-start">
        <ref name="MarkerValue.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="marker-mid">
        <ref name="MarkerValue.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="marker-end">
        <ref name="MarkerValue.datatype"/>
      </attribute>
    </optional>
  </define>
  <define name="SVG.Marker.class" combine="choice">
    <choice>
      <ref name="marker"/>
    </choice>
  </define>
  <define name="SVG.marker.content">
    <zeroOrMore>
      <choice>
        <ref name="SVG.Description.class"/>
        <ref name="SVG.Animation.class"/>
        <ref name="SVG.Structure.class"/>
        <ref name="SVG.Conditional.class"/>
        <ref name="SVG.Image.class"/>
        <ref name="SVG.MultiImage.class"/>
        <ref name="SVG.Style.class"/>
        <ref name="SVG.Shape.class"/>
        <ref name="SVG.Text.class"/>
        <ref name="SVG.Marker.class"/>
        <ref name="SVG.Profile.class"/>
        <ref name="SVG.Gradient.class"/>
        <ref name="SVG.Pattern.class"/>
        <ref name="SVG.Clip.class"/>
        <ref name="SVG.Mask.class"/>
        <ref name="SVG.Filter.class"/>
        <ref name="SVG.Cursor.class"/>
        <ref name="SVG.Hyperlink.class"/>
        <ref name="SVG.View.class"/>
        <ref name="SVG.Script.class"/>
        <ref name="SVG.Font.class"/>
      </choice>
    </zeroOrMore>
  </define>
  <define name="marker">
    <element name="marker">
      <ref name="attlist.marker"/>
      <ref name="SVG.marker.content"/>
    </element>
  </define>
  <define name="attlist.marker" combine="interleave">
    <ref name="SVG.Core.attrib"/>
    <ref name="SVG.Style.attrib"/>
    <ref name="SVG.Presentation.attrib"/>
    <ref name="SVG.External.attrib"/>
    <ref name="SVG.ShadowInherit.attrib"/>
    <optional>
      <attribute name="refX">
        <ref name="Coordinate.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="refY">
        <ref name="Coordinate.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="markerUnits">
        <choice>
          <value>strokeWidth</value>
          <value>userSpaceOnUse</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="markerWidth">
        <ref name="Length.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="markerHeight">
        <ref name="Length.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="orient"/>
    </optional>
    <optional>
      <attribute name="viewBox">
        <ref name="ViewBoxSpec.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="preserveAspectRatio" a:defaultValue="xMidYMid meet">
        <ref name="PreserveAspectRatioSpec.datatype"/>
      </attribute>
    </optional>
  </define>
</grammar>




<!-- ==============================================================
      SVG12-RNG | Graphical Events attributes
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >

  <define name='SVG.onfocusin.attrib'>
    <optional>
      <attribute name='onfocusin'>
        <ref name='Script.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.onfocusout.attrib'>
    <optional>
      <attribute name='onfocusout'>
        <ref name='Script.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.onactivate.attrib'>
    <optional>
      <attribute name='onactivate'>
        <ref name='Script.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.onclick.attrib'>
    <optional>
      <attribute name='onclick'>
        <ref name='Script.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.onmousedown.attrib'>
    <optional>
      <attribute name='onmousedown'>
        <ref name='Script.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.onmouseup.attrib'>
    <optional>
      <attribute name='onmouseup'>
        <ref name='Script.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.onmouseover.attrib'>
    <optional>
      <attribute name='onmouseover'>
        <ref name='Script.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.onmousemove.attrib'>
    <optional>
      <attribute name='onmousemove'>
        <ref name='Script.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.onmouseout.attrib'>
    <optional>
      <attribute name='onmouseout'>
        <ref name='Script.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.onload.attrib' combine='interleave'>
    <optional>
      <attribute name='onload'>
        <ref name='Script.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.GraphicalEvents.attrib' combine='interleave'>
    <ref name='SVG.onfocusin.attrib'/>
    <ref name='SVG.onfocusout.attrib'/>
    <ref name='SVG.onactivate.attrib'/>
    <ref name='SVG.onclick.attrib'/>
    <ref name='SVG.onmousedown.attrib'/>
    <ref name='SVG.onmouseup.attrib'/>
    <ref name='SVG.onmouseover.attrib'/>
    <ref name='SVG.onmousemove.attrib'/>
    <ref name='SVG.onmouseout.attrib'/>
    <ref name='SVG.onload.attrib'/>
  </define>

</grammar>




<!-- ==============================================================
      SVG12-RNG | Gradients
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         xmlns:svg='http://www.w3.org/2000/svg'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >

  <include href='../Tiny-1.2/tiny-gradient.rng'/>

  <define name='SVG.GradientCommon.attrib' combine='interleave'>
    <optional>
      <attribute name='spreadMethod'>
        <choice>
          <value>pad</value>
          <value>reflect</value>
          <value>repeat</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name='gradientTransform'>
        <ref name='TransformList.datatype'/>
      </attribute>
    </optional>
    <ref name='SVG.XLink.attrib'/>
  </define>


  <define name='attlist.radialGradient' combine='interleave'>
    <optional>
      <attribute name='fx'>
        <ref name='Coordinate.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='fy'>
        <ref name='Coordinate.datatype'/>
      </attribute>
    </optional>
  </define>


  <define name='GradientOffset.datatype' combine='choice'>
    <ref name='NumberOrPercentage.datatype'/>
  </define>

</grammar>




<!-- ==============================================================
      SVG12-RNG | SVG 1.2 Full Driver
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg' xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:xlink='http://www.w3.org/1999/xlink'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         xmlns:svg='http://www.w3.org/2000/svg'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'>



  <!-- ... common libraries and attributes ........................ -->
  <include href='../Tiny-1.2/datatypes.rng'/>
  <include href='../Tiny-1.2/core-attrib.rng'/>
  <include href='../Tiny-1.2/tiny-paint-attrib.rng'/>
  <include href='../Tiny-1.2/graphics-attrib.rng'/>
  <include href='../Tiny-1.2/transform-attrib.rng'/>
  <include href='../Tiny-1.2/xlink-attrib.rng'/>
  <include href='../Tiny-1.2/extresources-attrib.rng'/>
  <include href='../Tiny-1.2/media-attrib.rng'/>
  <include href='../Tiny-1.2/focusable-attrib.rng'/>
  <include href='../Tiny-1.2/editable-attrib.rng'/>
  <include href='../Tiny-1.2/backgroundfill-attrib.rng'/>
  <include href='opacity-attrib.rng'/>
  <include href='vectoreffects-attrib.rng'/>
  <include href='viewport-attrib.rng'/>


  <!-- ... element definitions .................................... -->
  <include href='structure.rng'/>
  <include href='../Tiny-1.2/conditional.rng'/>
  <include href='../Tiny-1.2/image.rng'/>
  <include href='../Tiny-1.2/shape.rng'/>
  <include href='text.rng'/>
  <include href='../Tiny-1.2/hyperlink.rng'/>
  <include href='../Tiny-1.2/script.rng'/>
  <include href='../Tiny-1.2/animation.rng'/>
  <include href='font.rng'/>
  <include href='../Tiny-1.2/extensibility.rng'/>
  <include href='gradient.rng'/>
  <include href='../Tiny-1.2/solidcolor.rng'/>
  <include href='../Tiny-1.2/audio.rng'/>
  <include href='../Tiny-1.2/video.rng'/>
  <include href='../Tiny-1.2/animation-element.rng'/>
  <include href='../Tiny-1.2/page.rng'/>
  <include href='flow.rng'/>
  <include href='../Tiny-1.2/handler.rng'/>
  <include href='../Tiny-1.2/prefetch.rng'/>

  <!-- ... only available in Full ................................. -->
  <include href='animevents-attrib.rng'/>
  <include href='docevents-attrib.rng'/>
  <include href='graphevents-attrib.rng'/>
  <include href='clip.rng'/>
  <include href='filter.rng'/>
  <include href='mask.rng'/>
  <include href='pattern.rng'/>
  <include href='style.rng'/>
  <include href='transition.rng'/>
  <include href='vectoreffects.rng'/>
  <include href='extendedlink.rng'/>
  <include href='cursor.rng'/>
  <include href='compositing-attrib.rng'/>
  <include href='marker.rng'/>
  <include href='profile.rng'/>
  <include href='shadow-attrib.rng'/>
  <include href='tooltip-attrib.rng'/>
  <include href='view.rng'/>
  <include href='xmlevents.rng'/>
  <include href='multiImage.rng'/>
  <include href='deviceColor.rng'/>
  <include href='traitDef.rng'/>

</grammar>



<!-- ==============================================================
      SVG12-RNG | Fonts
     ============================================================== -->
<grammar ns="http://www.w3.org/2000/svg" xml:lang="en" xmlns="http://relaxng.org/ns/structure/1.0" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <include href="../Tiny-1.2/tiny-font.rng"/>
  <define name="SVG.glyph.class" combine="choice">
    <choice>
      <ref name="SVG.Animation.class"/>
      <ref name="SVG.Structure.class"/>
      <ref name="SVG.Conditional.class"/>
      <ref name="SVG.Image.class"/>
      <ref name="SVG.MultiImage.class"/>
      <ref name="SVG.Style.class"/>
      <ref name="SVG.Shape.class"/>
      <ref name="SVG.Text.class"/>
      <ref name="SVG.Marker.class"/>
      <ref name="SVG.Profile.class"/>
      <ref name="SVG.Gradient.class"/>
      <ref name="SVG.Pattern.class"/>
      <ref name="SVG.Clip.class"/>
      <ref name="SVG.Mask.class"/>
      <ref name="SVG.Filter.class"/>
      <ref name="SVG.Cursor.class"/>
      <ref name="SVG.Hyperlink.class"/>
      <ref name="SVG.View.class"/>
      <ref name="SVG.Script.class"/>
      <ref name="SVG.Font.class"/>
    </choice>
  </define>
  <define name="SVG.missing-glyph.class" combine="choice">
    <choice>
      <ref name="SVG.Animation.class"/>
      <ref name="SVG.Structure.class"/>
      <ref name="SVG.Conditional.class"/>
      <ref name="SVG.Image.class"/>
      <ref name="SVG.MultiImage.class"/>
      <ref name="SVG.Style.class"/>
      <ref name="SVG.Shape.class"/>
      <ref name="SVG.Text.class"/>
      <ref name="SVG.Marker.class"/>
      <ref name="SVG.Profile.class"/>
      <ref name="SVG.Gradient.class"/>
      <ref name="SVG.Pattern.class"/>
      <ref name="SVG.Clip.class"/>
      <ref name="SVG.Mask.class"/>
      <ref name="SVG.Filter.class"/>
      <ref name="SVG.Cursor.class"/>
      <ref name="SVG.Hyperlink.class"/>
      <ref name="SVG.View.class"/>
      <ref name="SVG.Script.class"/>
      <ref name="SVG.Font.class"/>
    </choice>
  </define>
  <define name="SVG.font-face-uri.content" combine="choice">
    <zeroOrMore>
      <ref name="font-face-format"/>
    </zeroOrMore>
  </define>
  <define name="SVG.font-face-format.content">
    <empty/>
  </define>
  <define name="font-face-format">
    <element name="font-face-format">
      <ref name="attlist.font-face-format"/>
      <ref name="SVG.font-face-format.content"/>
    </element>
  </define>
  <define name="attlist.font-face-format" combine="interleave">
    <ref name="SVG.Core.attrib"/>
    <optional>
      <attribute name="string"/>
    </optional>
  </define>
  <define name="SVG.definition-src.content">
    <empty/>
  </define>
  <define name="definition-src">
    <element name="definition-src">
      <ref name="attlist.definition-src"/>
      <ref name="SVG.definition-src.content"/>
    </element>
  </define>
  <define name="attlist.definition-src" combine="interleave">
    <ref name="SVG.Core.attrib"/>
    <ref name="SVG.XLinkRequired.attrib"/>
  </define>
</grammar>





<!-- ==============================================================
      SVG12-RNG | Basic Flow
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >

  <include href='../Tiny-1.2/tiny-flow.rng'/>


  <define name='SVG.FlowText.class' combine='choice'>
    <choice>
      <ref name='flowRef'/>
    </choice>
  </define>


  <define name='SVG.flowRoot.class' combine='interleave'>
    <interleave>
      <ref name='flowRegionExclude'/>
      <zeroOrMore>
        <ref name='flowDiv'/>
      </zeroOrMore>
    </interleave>
  </define>

  <define name='SVG.moreFlowRegions.class' combine='interleave'>
    <ref name='flowRegion'/>
  </define>

  <define name='SVG.flowPara.class' combine='choice'>
    <choice>
      <ref name='flowRegionBreak'/>
      <ref name='flowLine'/>
      <ref name='flowTref'/>
      <ref name='flowImage'/>
    </choice>
  </define>

  <define name='SVG.flowSpan.class' combine='choice'>
    <choice>
      <ref name='flowRegionBreak'/>
      <ref name='flowLine'/>
      <ref name='flowTref'/>
      <ref name='flowImage'/>
    </choice>
  </define>


  <define name='SVG.flowRegion.class' combine='choice'>
    <choice>
      <zeroOrMore>
        <ref name='g'/>
        <ref name='use'/>
        <ref name='SVG.Shape.class'/>
        <ref name='SVG.Text.class'/>
        <ref name='flowRegionExclude'/>
      </zeroOrMore>
    </choice>
  </define>


  <define name='flowRegionExclude'>
    <element name='flowRegionExclude'>
      <ref name='attlist.flowRegion'/>
      <ref name='SVG.flowRegion.content'/>
    </element>
  </define>


  <define name='flowRef'>
    <element name='flowRef'>
      <ref name='attlist.flowRef'/>
      <ref name='SVG.flowRef.content'/>
    </element>
  </define>

  <define name='attlist.flowRef' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.Style.attrib'/>
    <ref name='SVG.Presentation.attrib'/>
    <ref name='SVG.GraphicalEvents.attrib'/>
    <ref name='SVG.XLinkRequired.attrib'/>
  </define>

  <define name='SVG.flowRef.content'>
    <zeroOrMore>
      <ref name='SVG.Description.class'/>
    </zeroOrMore>
  </define>


  <define name='flowTref'>
    <element name='flowTref'>
      <ref name='attlist.flowTref'/>
      <ref name='SVG.flowTref.content'/>
    </element>
  </define>

  <define name='attlist.flowTref' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.Style.attrib'/>
    <ref name='SVG.Presentation.attrib'/>
    <ref name='SVG.GraphicalEvents.attrib'/>
    <ref name='SVG.XLinkRequired.attrib'/>
  </define>

  <define name='SVG.flowTref.content'><empty/></define>



  <define name='flowDiv'>
    <element name='flowDiv'>
      <ref name='attlist.flowDiv'/>
      <ref name='SVG.flowDiv.content'/>
    </element>
  </define>

  <define name='attlist.flowDiv' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.Style.attrib'/>
    <ref name='SVG.Presentation.attrib'/>
    <ref name='SVG.GraphicalEvents.attrib'/>
  </define>

  <define name='SVG.flowDiv.content'>
    <zeroOrMore>
      <ref name='SVG.Description.class'/>
      <ref name='flowPara'/>
      <ref name='flowRegionBreak'/>
    </zeroOrMore>
  </define>



  <define name='flowRegionBreak'>
    <element name='flowRegionBreak'>
      <ref name='attlist.flowRegionBreak'/>
      <ref name='SVG.flowRegionBreak.content'/>
    </element>
  </define>

  <define name='attlist.flowRegionBreak' combine='interleave'>
    <empty/>
  </define>

  <define name='SVG.flowRegionBreak.content'>
    <empty/>
  </define>



  <define name='flowLine'>
    <element name='flowLine'>
      <ref name='attlist.flowLine'/>
      <ref name='SVG.flowLine.content'/>
    </element>
  </define>

  <define name='attlist.flowLine' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.Style.attrib'/>
    <ref name='SVG.Presentation.attrib'/>
    <ref name='SVG.GraphicalEvents.attrib'/>
  </define>

  <define name='SVG.flowLine.content'>
    <zeroOrMore>
      <ref name='flowSpan'/>
      <ref name='flowImage'/>
      <ref name='flowRegionBreak'/>
    </zeroOrMore>
  </define>



  <define name='flowImage'>
    <element name='flowImage'>
      <ref name='attlist.flowImage'/>
      <ref name='SVG.flowImage.content'/>
    </element>
  </define>

  <define name='attlist.flowImage' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.Style.attrib'/>
    <ref name='SVG.Presentation.attrib'/>
    <ref name='SVG.GraphicalEvents.attrib'/>
  </define>

  <define name='SVG.flowImage.content'>
    <zeroOrMore>
      <ref name='g'/>
      <ref name='use'/>
      <ref name='text'/>
      <ref name='image'/>
      <ref name='video'/>
      <ref name='flowRoot'/>
      <ref name='flowRef'/>
      <ref name='SVG.Shape.class'/>
      <ref name='SVG.Text.class'/>
    </zeroOrMore>
  </define>


</grammar>





<!-- ==============================================================
      SVG12-RNG | Basic Filter
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >

  <define name='FilterValue.datatype'>
    <data type='string'/>
  </define>

  <define name='NumberOptionalNumber.datatype'>
    <data type='string'/>
  </define>


  <define name='SVG.Filter.attrib' combine='interleave'>
    <optional>
      <attribute name='filter'>
        <ref name='FilterValue.datatype'/>
      </attribute>
    </optional>
  </define>




  <define name='SVG.FilterColor.attrib' combine='interleave'>
    <optional>
      <attribute name='color-interpolation-filters'>
        <choice>
          <value>auto</value>
          <value>sRGB</value>
          <value>linearRGB</value>
          <value>inherit</value>
        </choice>
      </attribute>
    </optional>
  </define>



  <define name='SVG.Filter.class' combine='choice'>
    <choice>
      <ref name='filter'/>
    </choice>
  </define>



  <define name='SVG.FilterPrimitive.class'>
    <choice>
      <ref name='feBlend'/>
      <ref name='feColorMatrix'/>
      <ref name='feComponentTransfer'/>
      <ref name='feComposite'/>
      <ref name='feFlood'/>
      <ref name='feGaussianBlur'/>
      <ref name='feImage'/>
      <ref name='feMerge'/>
      <ref name='feOffset'/>
      <ref name='feTile'/>
      <ref name='feConvolveMatrix'/>
      <ref name='feDiffuseLighting'/>
      <ref name='feDisplacementMap'/>
      <ref name='feMorphology'/>
      <ref name='feSpecularLighting'/>
      <ref name='feTurbulence'/>
    </choice>
  </define>



  <define name='SVG.FilterPrimitive.attrib'>
    <optional>
      <attribute name='x'>
        <ref name='Coordinate.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='y'>
        <ref name='Coordinate.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='width'>
        <ref name='Length.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='height'>
        <ref name='Length.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='dx'>
        <ref name='Length.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='dy'>
        <ref name='Length.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='dw'>
        <ref name='Length.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='dh'>
        <ref name='Length.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='result'/>
    </optional>
    <optional>
      <attribute name='filterPrimitiveMarginsUnits'>
        <choice>
          <value>userSpaceOnUse</value>
          <value>objectBoundingBox</value>
        </choice>
      </attribute>
    </optional>
  </define>



  <define name='SVG.FilterPrimitiveWithIn.attrib'>
    <ref name='SVG.FilterPrimitive.attrib'/>
    <optional>
      <attribute name='in'/>
    </optional>
  </define>




  <define name='SVG.filter.content'>
    <zeroOrMore>
      <ref name='SVG.Description.class'/>
    </zeroOrMore>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
        <ref name='SVG.FilterPrimitive.class'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='filter'>
    <element name='filter'>
      <ref name='attlist.filter'/>
      <ref name='SVG.filter.content'/>
    </element>
  </define>

  <define name='attlist.filter' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.Style.attrib'/>
    <ref name='SVG.Presentation.attrib'/>
    <ref name='SVG.XLink.attrib'/>
    <ref name='SVG.External.attrib'/>
    <optional>
      <attribute name='x'>
        <ref name='Coordinate.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='y'>
        <ref name='Coordinate.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='width'>
        <ref name='Length.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='height'>
        <ref name='Length.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='dx'>
        <ref name='Length.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='dy'>
        <ref name='Length.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='dw'>
        <ref name='Length.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='dh'>
        <ref name='Length.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='filterRes'>
        <ref name='NumberOptionalNumber.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='filterUnits'>
        <choice>
          <value>userSpaceOnUse</value>
          <value>objectBoundingBox</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name='primitiveUnits'>
        <choice>
          <value>userSpaceOnUse</value>
          <value>objectBoundingBox</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name='filterMarginsUnits'>
        <choice>
          <value>userSpaceOnUse</value>
          <value>objectBoundingBox</value>
        </choice>
      </attribute>
    </optional>
  </define>





  <define name='SVG.feBlend.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feBlend'>
    <element name='feBlend'>
      <ref name='attlist.feBlend'/>
      <ref name='SVG.feBlend.content'/>
    </element>
  </define>

  <define name='attlist.feBlend' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.FilterColor.attrib'/>
    <ref name='SVG.FilterPrimitiveWithIn.attrib'/>
    <attribute name='in2'/>
    <optional>
      <attribute name='mode' a:defaultValue='normal'>
        <choice>
          <value>normal</value>
          <value>multiply</value>
          <value>screen</value>
          <value>darken</value>
          <value>lighten</value>
        </choice>
      </attribute>
    </optional>
  </define>





  <define name='SVG.feColorMatrix.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feColorMatrix'>
    <element name='feColorMatrix'>
      <ref name='attlist.feColorMatrix'/>
      <ref name='SVG.feColorMatrix.content'/>
    </element>
  </define>

  <define name='attlist.feColorMatrix' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.FilterColor.attrib'/>
    <ref name='SVG.FilterPrimitiveWithIn.attrib'/>
    <optional>
      <attribute name='type' a:defaultValue='matrix'>
        <choice>
          <value>matrix</value>
          <value>saturate</value>
          <value>hueRotate</value>
          <value>luminanceToAlpha</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name='values'/>
    </optional>
  </define>





  <define name='SVG.feComponentTransfer.content'>
    <optional><ref name='feFuncR'/></optional>
    <optional><ref name='feFuncG'/></optional>
    <optional><ref name='feFuncB'/></optional>
    <optional><ref name='feFuncA'/></optional>
  </define>

  <define name='feComponentTransfer'>
    <element name='feComponentTransfer'>
      <ref name='attlist.feComponentTransfer'/>
      <ref name='SVG.feComponentTransfer.content'/>
    </element>
  </define>

  <define name='attlist.feComponentTransfer' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.FilterColor.attrib'/>
    <ref name='SVG.FilterPrimitiveWithIn.attrib'/>
  </define>





  <define name='SVG.feComposite.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feComposite'>
    <element name='feComposite'>
      <ref name='attlist.feComposite'/>
      <ref name='SVG.feComposite.content'/>
    </element>
  </define>

  <define name='attlist.feComposite' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.FilterColor.attrib'/>
    <ref name='SVG.FilterPrimitiveWithIn.attrib'/>
    <attribute name='in2'/>
    <optional>
      <attribute name='operator' a:defaultValue='over'>
        <choice>
          <value>over</value>
          <value>in</value>
          <value>out</value>
          <value>atop</value>
          <value>xor</value>
          <value>arithmetic</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name='k1'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='k2'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='k3'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='k4'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
  </define>





  <define name='SVG.feFlood.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
        <ref name='animateColor'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feFlood'>
    <element name='feFlood'>
      <ref name='attlist.feFlood'/>
      <ref name='SVG.feFlood.content'/>
    </element>
  </define>

  <define name='attlist.feFlood' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.Style.attrib'/>
    <ref name='SVG.Color.attrib'/>
    <ref name='SVG.FilterColor.attrib'/>
    <ref name='SVG.FilterPrimitiveWithIn.attrib'/>
    <optional>
      <attribute name='flood-color'>
        <ref name='SVGColor.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='flood-opacity'>
        <ref name='OpacityValue.datatype'/>
      </attribute>
    </optional>
  </define>





  <define name='SVG.feGaussianBlur.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feGaussianBlur'>
    <element name='feGaussianBlur'>
      <ref name='attlist.feGaussianBlur'/>
      <ref name='SVG.feGaussianBlur.content'/>
    </element>
  </define>

  <define name='attlist.feGaussianBlur' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.FilterColor.attrib'/>
    <ref name='SVG.FilterPrimitiveWithIn.attrib'/>
    <optional>
      <attribute name='stdDeviation'>
        <ref name='NumberOptionalNumber.datatype'/>
      </attribute>
    </optional>
  </define>





  <define name='SVG.feImage.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
        <ref name='animateTransform'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feImage'>
    <element name='feImage'>
      <ref name='attlist.feImage'/>
      <ref name='SVG.feImage.content'/>
    </element>
  </define>

  <define name='attlist.feImage' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.Style.attrib'/>
    <ref name='SVG.Presentation.attrib'/>
    <ref name='SVG.FilterPrimitive.attrib'/>
    <ref name='SVG.XLinkEmbed.attrib'/>
    <ref name='SVG.External.attrib'/>
    <ref name='SVG.Transition.attrib'/>
    <ref name='SVG.ShadowInherit.attrib'/>
    <optional>
      <attribute name='preserveAspectRatio' a:defaultValue='xMidYMid meet'>
        <ref name='PreserveAspectRatioSpec.datatype'/>
      </attribute>
    </optional>
  </define>





  <define name='SVG.feMerge.content'>
    <zeroOrMore>
      <ref name='feMergeNode'/>
    </zeroOrMore>
  </define>

  <define name='feMerge'>
    <element name='feMerge'>
      <ref name='attlist.feMerge'/>
      <ref name='SVG.feMerge.content'/>
    </element>
  </define>

  <define name='attlist.feMerge' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.FilterColor.attrib'/>
    <ref name='SVG.FilterPrimitive.attrib'/>
  </define>





  <define name='SVG.feMergeNode.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feMergeNode'>
    <element name='feMergeNode'>
      <ref name='attlist.feMergeNode'/>
      <ref name='SVG.feMergeNode.content'/>
    </element>
  </define>

  <define name='attlist.feMergeNode' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <optional>
      <attribute name='in'/>
    </optional>
  </define>





  <define name='SVG.feOffset.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feOffset'>
    <element name='feOffset'>
      <ref name='attlist.feOffset'/>
      <ref name='SVG.feOffset.content'/>
    </element>
  </define>

  <define name='attlist.feOffset' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.FilterColor.attrib'/>
    <ref name='SVG.FilterPrimitiveWithIn.attrib'/>
  </define>





  <define name='SVG.feTile.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feTile'>
    <element name='feTile'>
      <ref name='attlist.feTile'/>
      <ref name='SVG.feTile.content'/>
    </element>
  </define>

  <define name='attlist.feTile' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.FilterColor.attrib'/>
    <ref name='SVG.FilterPrimitiveWithIn.attrib'/>
  </define>





  <define name='SVG.feFuncR.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feFuncR'>
    <element name='feFuncR'>
      <ref name='attlist.feFuncR'/>
      <ref name='SVG.feFuncR.content'/>
    </element>
  </define>

  <define name='attlist.feFuncR' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <attribute name='type'>
      <choice>
        <value>identity</value>
        <value>table</value>
        <value>discrete</value>
        <value>linear</value>
        <value>gamma</value>
      </choice>
    </attribute>
    <optional>
      <attribute name='tableValues'/>
    </optional>
    <optional>
      <attribute name='slope'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='intercept'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='amplitude'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='exponent'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='offset'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
  </define>





  <define name='SVG.feFuncG.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feFuncG'>
    <element name='feFuncG'>
      <ref name='attlist.feFuncG'/>
      <ref name='SVG.feFuncG.content'/>
    </element>
  </define>

  <define name='attlist.feFuncG' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <attribute name='type'>
      <choice>
        <value>identity</value>
        <value>table</value>
        <value>discrete</value>
        <value>linear</value>
        <value>gamma</value>
      </choice>
    </attribute>
    <optional>
      <attribute name='tableValues'/>
    </optional>
    <optional>
      <attribute name='slope'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='intercept'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='amplitude'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='exponent'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='offset'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
  </define>





  <define name='SVG.feFuncB.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feFuncB'>
    <element name='feFuncB'>
      <ref name='attlist.feFuncB'/>
      <ref name='SVG.feFuncB.content'/>
    </element>
  </define>

  <define name='attlist.feFuncB' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <attribute name='type'>
      <choice>
        <value>identity</value>
        <value>table</value>
        <value>discrete</value>
        <value>linear</value>
        <value>gamma</value>
      </choice>
    </attribute>
    <optional>
      <attribute name='tableValues'/>
    </optional>
    <optional>
      <attribute name='slope'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='intercept'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='amplitude'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='exponent'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='offset'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
  </define>





  <define name='SVG.feFuncA.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feFuncA'>
    <element name='feFuncA'>
      <ref name='attlist.feFuncA'/>
      <ref name='SVG.feFuncA.content'/>
    </element>
  </define>

  <define name='attlist.feFuncA' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <attribute name='type'>
      <choice>
        <value>identity</value>
        <value>table</value>
        <value>discrete</value>
        <value>linear</value>
        <value>gamma</value>
      </choice>
    </attribute>
    <optional>
      <attribute name='tableValues'/>
    </optional>
    <optional>
      <attribute name='slope'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='intercept'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='amplitude'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='exponent'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='offset'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
  </define>





  <define name='SVG.feConvolveMatrix.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feConvolveMatrix'>
    <element name='feConvolveMatrix'>
      <ref name='attlist.feConvolveMatrix'/>
      <ref name='SVG.feConvolveMatrix.content'/>
    </element>
  </define>

  <define name='attlist.feConvolveMatrix' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.FilterColor.attrib'/>
    <ref name='SVG.FilterPrimitiveWithIn.attrib'/>
    <attribute name='order'>
      <ref name='NumberOptionalNumber.datatype'/>
    </attribute>
    <attribute name='kernelMatrix'/>
    <optional>
      <attribute name='divisor'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='bias'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='targetX'>
        <ref name='Integer.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='targetY'>
        <ref name='Integer.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='edgeMode' a:defaultValue='duplicate'>
        <choice>
          <value>duplicate</value>
          <value>wrap</value>
          <value>none</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name='kernelUnitLength'>
        <ref name='NumberOptionalNumber.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='preserveAlpha'>
        <ref name='Boolean.datatype'/>
      </attribute>
    </optional>
  </define>





  <define name='SVG.feDiffuseLighting.content'>
    <choice>
      <ref name='feDistantLight'/>
      <ref name='fePointLight'/>
      <ref name='feSpotLight'/>
    </choice>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
        <ref name='animateColor'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feDiffuseLighting'>
    <element name='feDiffuseLighting'>
      <ref name='attlist.feDiffuseLighting'/>
      <ref name='SVG.feDiffuseLighting.content'/>
    </element>
  </define>

  <define name='attlist.feDiffuseLighting' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.Style.attrib'/>
    <ref name='SVG.Color.attrib'/>
    <ref name='SVG.FilterColor.attrib'/>
    <ref name='SVG.FilterPrimitiveWithIn.attrib'/>
    <optional>
      <attribute name='lighting-color'>
        <ref name='SVGColor.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='surfaceScale'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='diffuseConstant'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='kernelUnitLength'>
        <ref name='NumberOptionalNumber.datatype'/>
      </attribute>
    </optional>
  </define>





  <define name='SVG.feDisplacementMap.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feDisplacementMap'>
    <element name='feDisplacementMap'>
      <ref name='attlist.feDisplacementMap'/>
      <ref name='SVG.feDisplacementMap.content'/>
    </element>
  </define>

  <define name='attlist.feDisplacementMap' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.FilterColor.attrib'/>
    <ref name='SVG.FilterPrimitiveWithIn.attrib'/>
    <attribute name='in2'/>
    <optional>
      <attribute name='scale'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='xChannelSelector' a:defaultValue='A'>
        <choice>
          <value>R</value>
          <value>G</value>
          <value>B</value>
          <value>A</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name='yChannelSelector' a:defaultValue='A'>
        <choice>
          <value>R</value>
          <value>G</value>
          <value>B</value>
          <value>A</value>
        </choice>
      </attribute>
    </optional>
  </define>





  <define name='SVG.feMorphology.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feMorphology'>
    <element name='feMorphology'>
      <ref name='attlist.feMorphology'/>
      <ref name='SVG.feMorphology.content'/>
    </element>
  </define>

  <define name='attlist.feMorphology' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.FilterColor.attrib'/>
    <ref name='SVG.FilterPrimitiveWithIn.attrib'/>
    <optional>
      <attribute name='operator' a:defaultValue='erode'>
        <choice>
          <value>erode</value>
          <value>dilate</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name='radius'>
        <ref name='NumberOptionalNumber.datatype'/>
      </attribute>
    </optional>
  </define>





  <define name='SVG.feSpecularLighting.content'>
    <choice>
      <ref name='feDistantLight'/>
      <ref name='fePointLight'/>
      <ref name='feSpotLight'/>
    </choice>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
        <ref name='animateColor'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feSpecularLighting'>
    <element name='feSpecularLighting'>
      <ref name='attlist.feSpecularLighting'/>
      <ref name='SVG.feSpecularLighting.content'/>
    </element>
  </define>

  <define name='attlist.feSpecularLighting' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.Style.attrib'/>
    <ref name='SVG.Color.attrib'/>
    <ref name='SVG.FilterColor.attrib'/>
    <ref name='SVG.FilterPrimitiveWithIn.attrib'/>
    <optional>
      <attribute name='lighting-color'>
        <ref name='SVGColor.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='surfaceScale'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='specularConstant'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='specularExponent'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='kernelUnitLength'>
        <ref name='NumberOptionalNumber.datatype'/>
      </attribute>
    </optional>
  </define>





  <define name='SVG.feTurbulence.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feTurbulence'>
    <element name='feTurbulence'>
      <ref name='attlist.feTurbulence'/>
      <ref name='SVG.feTurbulence.content'/>
    </element>
  </define>

  <define name='attlist.feTurbulence' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.FilterColor.attrib'/>
    <ref name='SVG.FilterPrimitive.attrib'/>
    <optional>
      <attribute name='baseFrequency'>
        <ref name='NumberOptionalNumber.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='numOctaves'>
        <ref name='Integer.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='seed'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='stitchTiles' a:defaultValue='noStitch'>
        <choice>
          <value>stitch</value>
          <value>noStitch</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name='type' a:defaultValue='turbulence'>
        <choice>
          <value>fractalNoise</value>
          <value>turbulence</value>
        </choice>
      </attribute>
    </optional>
  </define>





  <define name='SVG.feDistantLight.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feDistantLight'>
    <element name='feDistantLight'>
      <ref name='attlist.feDistantLight'/>
      <ref name='SVG.feDistantLight.content'/>
    </element>
  </define>

  <define name='attlist.feDistantLight' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <optional>
      <attribute name='azimuth'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='elevation'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
  </define>





  <define name='SVG.fePointLight.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='fePointLight'>
    <element name='fePointLight'>
      <ref name='attlist.fePointLight'/>
      <ref name='SVG.fePointLight.content'/>
    </element>
  </define>

  <define name='attlist.fePointLight' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <optional>
      <attribute name='x'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='y'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='z'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
  </define>





  <define name='SVG.feSpotLight.content'>
    <zeroOrMore>
      <choice>
        <ref name='animate'/>
        <ref name='set'/>
      </choice>
    </zeroOrMore>
  </define>

  <define name='feSpotLight'>
    <element name='feSpotLight'>
      <ref name='attlist.feSpotLight'/>
      <ref name='SVG.feSpotLight.content'/>
    </element>
  </define>

  <define name='attlist.feSpotLight' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <optional>
      <attribute name='x'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='y'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='z'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='pointsAtX'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='pointsAtY'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='pointsAtZ'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='specularExponent'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='limitingConeAngle'>
        <ref name='Number.datatype'/>
      </attribute>
    </optional>
  </define>

</grammar>




<!-- ==============================================================
      SVG12-RNG | Extended Links
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >


  <define name='SVG.Hyperlink.class' combine='choice'>
    <choice>
      <ref name='xa'/>
    </choice>
  </define>


  <define name='xa'>
    <element name='xa'>
      <ref name='attlist.xa'/>
      <ref name='SVG.xa.content'/>
    </element>
  </define>

  <define name='attlist.xa' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.Conditional.attrib'/>
    <ref name='SVG.Style.attrib'/>
    <ref name='SVG.Presentation.attrib'/>
    <ref name='SVG.GraphicalEvents.attrib'/>
    <ref name='SVG.External.attrib'/>
    <ref name='SVG.transform.attrib'/>
    <ref name='SVG.transform-host.attrib'/>
    <optional>
      <attribute name='target'>
        <ref name='LinkTarget.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.xa.content'>
    <zeroOrMore>
      <ref name='SVG.Description.class'/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name='loc'/>
    </zeroOrMore>
    <zeroOrMore>
      <choice>
        <ref name='SVG.Animation.class'/>
        <ref name='SVG.Structure.class'/>
        <ref name='SVG.Conditional.class'/>
        <ref name='SVG.Image.class'/>
        <ref name='SVG.Style.class'/>
        <ref name='SVG.Shape.class'/>
        <ref name='SVG.Text.class'/>
        <ref name='SVG.Marker.class'/>
        <ref name='SVG.Profile.class'/>
        <ref name='SVG.Gradient.class'/>
        <ref name='SVG.Pattern.class'/>
        <ref name='SVG.Clip.class'/>
        <ref name='SVG.Mask.class'/>
        <ref name='SVG.Filter.class'/>
        <ref name='SVG.Cursor.class'/>
        <ref name='SVG.Hyperlink.class'/>
        <ref name='SVG.View.class'/>
        <ref name='SVG.Script.class'/>
        <ref name='SVG.Font.class'/>
      </choice>
    </zeroOrMore>
  </define>




  <define name='loc'>
    <element name='loc'>
      <ref name='attlist.loc'/>
      <ref name='SVG.loc.content'/>
    </element>
  </define>

  <define name='attlist.loc' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.XLinkReplace.attrib'/>
    <optional>
      <attribute name='target'>
        <ref name='LinkTarget.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.loc.content'>
    <ref name='title'/>
  </define>


</grammar>




<!-- ==============================================================
      SVG12-RNG | Document Events attributes
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >

  <define name='SVG.onunload.attrib'>
    <optional>
      <attribute name='onunload'>
        <ref name='Script.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.onabort.attrib'>
    <optional>
      <attribute name='onabort'>
        <ref name='Script.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.onerror.attrib'>
    <optional>
      <attribute name='onerror'>
        <ref name='Script.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.onresize.attrib'>
    <optional>
      <attribute name='onresize'>
        <ref name='Script.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.onscroll.attrib'>
    <optional>
      <attribute name='onscroll'>
        <ref name='Script.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.onzoom.attrib'>
    <optional>
      <attribute name='onzoom'>
        <ref name='Script.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.DocumentEvents.attrib' combine='interleave'>
    <ref name='SVG.onunload.attrib'/>
    <ref name='SVG.onabort.attrib'/>
    <ref name='SVG.onerror.attrib'/>
    <ref name='SVG.onresize.attrib'/>
    <ref name='SVG.onscroll.attrib'/>
    <ref name='SVG.onzoom.attrib'/>
  </define>

</grammar>




<!-- ==============================================================
      SVG12-RNG | deviceColor
     ============================================================== -->
<grammar ns='http://www.w3.org/2000/svg' xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         xmlns:svg='http://www.w3.org/2000/svg'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'>

  <define name='SVG.DeviceColor.class' combine='choice'>
    <choice>
      <ref name='deviceColor'/>
    </choice>
  </define>

  <define name='deviceColor'>
    <element name='deviceColor'>
      <ref name='attlist.deviceColor'/>
      <ref name='SVG.deviceColor.content'/>
    </element>
  </define>

  <define name='attlist.deviceColor' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <attribute name='name' svg:animatable='false' svg:inheritable='false'/>
    <attribute name='uri' svg:animatable='false' svg:inheritable='false'>
      <ref name='URI.datatype'/>
    </attribute>
  </define>

  <define name='SVG.deviceColor.content'>
    <empty/>
  </define>
</grammar>




<!-- ==============================================================
      SVG12-RNG | Cursor
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >

  <define name='CursorValue.datatype'>
    <data type='string'/>
  </define>


  <define name='SVG.Cursor.attrib' combine='interleave'>
    <optional>
      <attribute name='cursor'>
        <ref name='CursorValue.datatype'/>
      </attribute>
    </optional>
  </define>


  <define name='SVG.Cursor.class' combine='choice'>
    <choice>
      <ref name='cursor'/>
    </choice>
  </define>



  <define name='SVG.cursor.content'>
    <zeroOrMore>
      <ref name='SVG.Description.class'/>
    </zeroOrMore>
  </define>

  <define name='cursor'>
    <element name='cursor'>
      <ref name='attlist.cursor'/>
      <ref name='SVG.cursor.content'/>
    </element>
  </define>

  <define name='attlist.cursor' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.Conditional.attrib'/>
    <ref name='SVG.XLinkRequired.attrib'/>
    <ref name='SVG.External.attrib'/>
    <optional>
      <attribute name='x'>
        <ref name='Coordinate.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='y'>
        <ref name='Coordinate.datatype'/>
      </attribute>
    </optional>
  </define>

</grammar>




<!-- ==============================================================
      SVG12-RNG | Compositing attributes
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >

  <define name='SVG.clip-to-self.attrib'>
    <optional>
      <attribute name='clip-to-self' a:defaultValue='false'>
        <choice>
          <ref name='Boolean.datatype'/>
          <value>inherit</value>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name='SVG.knock-out.attrib'>
    <optional>
      <attribute name='knock-out' a:defaultValue='false'>
        <choice>
          <ref name='Boolean.datatype'/>
          <value>inherit</value>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name='SVG.comp-op.attrib'>
    <optional>
      <attribute name='comp-op' a:defaultValue='false'>
        <choice>
          <value>clear</value>
          <value>src</value>
          <value>dst</value>
          <value>src_over</value>
          <value>dst_over</value>
          <value>src_in</value>
          <value>dst_in</value>
          <value>src_out</value>
          <value>dst_out</value>
          <value>src_atop</value>
          <value>dst_atop</value>
          <value>xor</value>
          <value>plus</value>
          <value>multiply</value>
          <value>screen</value>
          <value>overlay</value>
          <value>darken</value>
          <value>lighten</value>
          <value>color_dodge</value>
          <value>color_burn</value>
          <value>hard_light</value>
          <value>soft_light</value>
          <value>difference</value>
          <value>exclusion</value>
          <value>inherit</value>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name='SVG.enable-background.attrib'>
    <optional>
      <attribute name='enable-background'>
        <data type='string'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.Compositing.attrib' combine='interleave'>
    <ref name='SVG.clip-to-self.attrib'/>
    <ref name='SVG.enable-background.attrib'/>
    <ref name='SVG.knock-out.attrib'/>
    <ref name='SVG.comp-op.attrib'/>
  </define>

</grammar>




<!-- ==============================================================
      SVG12-RNG | Clip
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >

  <define name='ClipPathValue.datatype'>
    <data type='string'/>
  </define>





  <define name='SVG.Clip.attrib' combine='interleave'>
    <optional>
      <attribute name='clip-path'>
        <ref name='ClipPathValue.datatype'/>
      </attribute>
    </optional>
    <optional>
      <attribute name='clip-rule'>
        <ref name='ClipFillRule.datatype'/>
      </attribute>
    </optional>
  </define>



  <define name='SVG.Clip.class' combine='choice'>
    <choice>
      <ref name='clipPath'/>
    </choice>
  </define>




  <define name='SVG.clipPath.class'>
    <choice>
      <ref name='rect'/>
      <ref name='SVG.Animation.class'/>
      <ref name='SVG.Use.class'/>
      <ref name='SVG.Shape.class'/>
      <ref name='SVG.Text.class'/>
    </choice>
  </define>

  <define name='SVG.clipPath.content'>
    <zeroOrMore>
      <ref name='SVG.Description.class'/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name='SVG.clipPath.class'/>
    </zeroOrMore>
  </define>

  <define name='clipPath'>
    <element name='clipPath'>
      <ref name='attlist.clipPath'/>
      <ref name='SVG.clipPath.content'/>
    </element>
  </define>

  <define name='attlist.clipPath' combine='interleave'>
    <ref name='SVG.Core.attrib'/>
    <ref name='SVG.Conditional.attrib'/>
    <ref name='SVG.Style.attrib'/>
    <ref name='SVG.Text.attrib'/>
    <ref name='SVG.TextContent.attrib'/>
    <ref name='SVG.Font.attrib'/>
    <ref name='SVG.Paint.attrib'/>
    <ref name='SVG.Color.attrib'/>
    <ref name='SVG.Opacity.attrib'/>
    <ref name='SVG.Graphics.attrib'/>
    <ref name='SVG.Clip.attrib'/>
    <ref name='SVG.Mask.attrib'/>
    <ref name='SVG.Filter.attrib'/>
    <ref name='SVG.Cursor.attrib'/>
    <ref name='SVG.External.attrib'/>
    <ref name='SVG.transform.attrib'/>
    <ref name='SVG.transform-host.attrib'/>
    <optional>
      <attribute name='clipPathUnits'>
        <choice>
          <value>userSpaceOnUse</value>
          <value>objectBoundingBox</value>
        </choice>
      </attribute>
    </optional>
  </define>

</grammar>




<!-- ==============================================================
      SVG12-RNG | Animation Events attributes
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >

  <define name='SVG.onbegin.attrib'>
    <optional>
      <attribute name='onbegin'>
        <ref name='Script.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.onend.attrib'>
    <optional>
      <attribute name='onend'>
        <ref name='Script.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.onrepeat.attrib'>
    <optional>
      <attribute name='onrepeat'>
        <ref name='Script.datatype'/>
      </attribute>
    </optional>
  </define>

  <define name='SVG.AnimationEvents.attrib' combine='interleave'>
    <ref name='SVG.onbegin.attrib'/>
    <ref name='SVG.onend.attrib'/>
    <ref name='SVG.onrepeat.attrib'/>
    <ref name='SVG.onload.attrib'/>
  </define>

</grammar>



<!-- ==============================================================
      SVG12-RNG | Masks
     ============================================================== -->
<grammar ns="http://www.w3.org/2000/svg" xml:lang="en" xmlns="http://relaxng.org/ns/structure/1.0" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <define name="MaskValue.datatype">
    <data type="string"/>
  </define>
  <define name="SVG.Mask.attrib" combine="interleave">
    <optional>
      <attribute name="mask">
        <ref name="MaskValue.datatype"/>
      </attribute>
    </optional>
  </define>
  <define name="SVG.Mask.class" combine="choice">
    <choice>
      <ref name="mask"/>
    </choice>
  </define>
  <define name="SVG.mask.content">
    <zeroOrMore>
      <choice>
        <ref name="SVG.Description.class"/>
        <ref name="SVG.Animation.class"/>
        <ref name="SVG.Structure.class"/>
        <ref name="SVG.Conditional.class"/>
        <ref name="SVG.Image.class"/>
        <ref name="SVG.MultiImage.class"/>
        <ref name="SVG.Style.class"/>
        <ref name="SVG.Shape.class"/>
        <ref name="SVG.Text.class"/>
        <ref name="SVG.Marker.class"/>
        <ref name="SVG.Profile.class"/>
        <ref name="SVG.Gradient.class"/>
        <ref name="SVG.Pattern.class"/>
        <ref name="SVG.Clip.class"/>
        <ref name="SVG.Mask.class"/>
        <ref name="SVG.Filter.class"/>
        <ref name="SVG.Cursor.class"/>
        <ref name="SVG.Hyperlink.class"/>
        <ref name="SVG.View.class"/>
        <ref name="SVG.Script.class"/>
        <ref name="SVG.Font.class"/>
      </choice>
    </zeroOrMore>
  </define>
  <define name="mask">
    <element name="mask">
      <ref name="attlist.mask"/>
      <ref name="SVG.mask.content"/>
    </element>
  </define>
  <define name="attlist.mask" combine="interleave">
    <ref name="SVG.Core.attrib"/>
    <ref name="SVG.Conditional.attrib"/>
    <ref name="SVG.Style.attrib"/>
    <ref name="SVG.Presentation.attrib"/>
    <ref name="SVG.External.attrib"/>
    <optional>
      <attribute name="x">
        <ref name="Coordinate.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="y">
        <ref name="Coordinate.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="width">
        <ref name="Length.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="height">
        <ref name="Length.datatype"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="maskUnits">
        <choice>
          <value>userSpaceOnUse</value>
          <value>objectBoundingBox</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="maskContentUnits">
        <choice>
          <value>userSpaceOnUse</value>
          <value>objectBoundingBox</value>
        </choice>
      </attribute>
    </optional>
  </define>
</grammar>



